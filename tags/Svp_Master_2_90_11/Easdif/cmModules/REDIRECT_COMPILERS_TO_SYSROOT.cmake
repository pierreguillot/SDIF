IF(NOT COMPILER_REDIRECT_INIT)
  INCLUDE(REPLACE_DEFAULT_VALUE_MACRO)
  INCLUDE(OVERWRITE_COMPILER)
  MACRO( REDIRECT_COMP DEPTARGET)
    IF (CMAKE_CXX_COMPILER)
     GET_FILENAME_COMPONENT(BASENAME ${CMAKE_CXX_COMPILER} NAME_WE )
     SET(COMP ${CMAKE_BINARY_DIR}/Modules/${BASENAME}.sh )
     FILE(WRITE ${COMP}  "#! /bin/bash\n")
     FILE(APPEND ${COMP} "MACOSX_DEPLOYMENT_TARGET=${DEPTARGET} ${CMAKE_CXX_COMPILER} \"$@\"\n")
    
     OVERWRITE_COMPILER(CXX ${COMP})
     SET(CMAKE_CXX_COMPILER_FULLPATH ${COMP} CACHE INTERNAL "Full path to cxx compiler" )
     EXEC_PROGRAM(chmod ARGS u+x ${COMP} )
    ENDIF (CMAKE_CXX_COMPILER)
    IF(CMAKE_C_COMPILER)
    GET_FILENAME_COMPONENT(BASENAME ${CMAKE_C_COMPILER} NAME_WE )
    SET(COMP ${CMAKE_BINARY_DIR}/Modules/${BASENAME}.sh )
    FILE(WRITE ${COMP}  "#! /bin/bash\n")
    FILE(APPEND ${COMP} "MACOSX_DEPLOYMENT_TARGET=${DEPTARGET} ${CMAKE_C_COMPILER} \"$@\"\n")
    
    OVERWRITE_COMPILER(C ${COMP})
    SET(CMAKE_C_COMPILER_FULLPATH ${COMP} CACHE INTERNAL "Full path to c compiler")
    EXEC_PROGRAM(chmod ARGS u+x ${COMP} )
    ENDIF(CMAKE_C_COMPILER)
  ENDMACRO( REDIRECT_COMP)
  
  IF ("${ARCH}" MATCHES "^p.*pc.*")
    FIND_PATH (SDK MacOSX10.3.9.sdk /Developer/SDKs DOC "Path to 10.3.9 SDK") 
    IF ("${SDK}" MATCHES "/Developer/SDKs")
      ADD_DEFINITIONS ( -isysroot ${SDK}/MacOSX10.3.9.sdk )
      REDIRECT_COMP(10.3)
    ENDIF ("${SDK}" MATCHES "/Developer/SDKs")
  ELSE ("${ARCH}" MATCHES "^p.*pc.*" )
    FIND_PATH (SDK MacOSX10.4u.sdk /Developer/SDKs DOC "Path to 10.4 SDK") 
    IF ("${SDK}" MATCHES "/Developer/SDKs")
      # does not work due to space escaping of cmake
      #SET(CMAKE_CXX_COMPILER "MACOSX_DEPLOYMENT_TARGET=10.4 ${CMAKE_CXX_COMPILER}" )
      REDIRECT_COMP(10.4)
      ADD_DEFINITIONS (-isysroot ${SDK}/MacOSX10.4u.sdk )
    ENDIF ("${SDK}" MATCHES "/Developer/SDKs")
  ENDIF("${ARCH}" MATCHES "^p.*pc.*" )
  SET(COMPILER_REDIRECT_INIT 1 CACHE INTERNAL "Compiler has been redirected to shell script to use deploment target enviroment")
ENDIF(NOT COMPILER_REDIRECT_INIT)
