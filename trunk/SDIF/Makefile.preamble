# $Id: Makefile.preamble,v 3.8 2000-09-27 10:17:41 schwarz Exp $ -*-makefile-*-
#
#               Copyright (c) 1998 by IRCAM - Centre Pompidou
#                          All rights reserved.
#
#  For any information regarding this and other IRCAM software, please
#  send email to:
#                            manager@ircam.fr
#
# Makefile.preamble
# 
#
# $Log: not supported by cvs2svn $
# Revision 3.7  2000/08/07  12:33:16  schwarz
# Install types in INSTALL_TYP := $(INSTALL_ROOT)/lib.
#
# Revision 3.6  2000/07/06  18:59:01  tisseran
# *** empty log message ***
#
# Revision 3.5  2000/02/22  15:45:18  schwarz
# Added settings for Linux port by Patrice Tisserand.
#
# Revision 3.4  1999/10/07  15:22:53  schwarz
# Factoring of commonly used path part $(ARCHDIR).
# User option for me to compile into my $(HOME)/xxx.
# Various little improvements.
#
# Revision 3.3  1999/09/28  13:24:34  schwarz
# Use true ansi compiler, correct libraries, and include path for
# preincluded.h, including host_architecture.h and SDIF's project_preinclude.h.
#
# Revision 3.2  1999/04/30  13:46:14  schwarz
# We're installing for the team now!
#
# Revision 3.1  1999/03/14  10:54:33  virolle
# SdifStdErr add
#
# Revision 2.2  1999/02/28  12:16:26  virolle
# memory report



############################################
#	architecture
#

ARCH	:= $(subst Linux,i686,$(shell arch))
# Linux special: correct wrong /usr/local/bin/arch
SYSTEM 	:= $(shell uname -s)
SYSVERS := $(shell uname -r)
DATE 	:= $(shell date)
USER 	:= $(shell whoami)

SYS	= $(SYSTEM)_$(SYSVERS)
SYSDIR	= $(SYS)$(TARGET)
ARCHDIR	= $(ARCH)/$(SYSDIR)

RM	= rm -f


##################################
#  elements de base
#

# Le repertoire racine du projet PRJ_DIR 
# est assigne dans chaque sous makefile avant
# d'inclure ce preambule. Ainsi
# chaque sous makefile peut atteindre n'importe
# quel endroit du projet et ils sont tous executable
# independament.
# pour le makefile principale  PRJ_DIR est $(shell pwd),
# pour les autres (objetcs, library, tosdif, sdiftotext) c'est $(shell pwd)/..

PROJECT 	= sdif

# same as _SdifFormatVersion in SdifGlobals.h
SDIF_FORMAT 	= 3

# - RELEASE 1.00 est la version alpha (maquette de SDIF) installee
#   dans Diphone pour le forum Novembre 1997.
# - RELEASE 2.00 n'est pas encore compatible avec le CNMAT
# - RELEASE 3 est celle qui est compatible avec le CNMAT (au moins pour
#   l'entête, les frames et les matrices) 
# - pour la compatibilite des frames ASCII, il faudra sans doute avoir
#   une RELEASE 4.00
RELEASE 	= $(SDIF_FORMAT).3.0

SDIF_SRC_DIR 	= $(PRJ_DIR)/$(PROJECT)

# INSTALL_ROOT doit etre changer par l'installateur
INSTALL_ROOT := /u/formes
#INSTALL_ROOT := /usr/local
INSTALL_LIB := $(INSTALL_ROOT)/lib/$(ARCH)/$(SYS)
INSTALL_BIN := $(INSTALL_ROOT)/bin/$(ARCH)/$(SYS)
INSTALL_INC := $(INSTALL_ROOT)/include/$(PROJECT)
INSTALL_TYP := $(INSTALL_ROOT)/lib





#######################################
# Nom du fichier des types predefinis de SDIF
#

###
# Pour la maintenance de la librairie:
#

SRC_TYPES_SDIF := $(SDIF_SRC_DIR)/SdifTypes.STYP

# mais il est mieux d'utiliser la variable d'environnement SDIFTYPES
# prevue pour detourner le fichier officiel des types predefinis
# donc: setenv SDIFTYPES <your project root>/sdif/SdifTypes.STYP
# permet d'utiliser le fichier de nom $SDIFTYPES au lieu d'utiliser
# la version officielle (pas de recomplilation necessaire sur modification
# de cette variable d'environnement)




###
#  Pour l'installation officielle:
#

PRE_TYPES_SDIF := $(INSTALL_TYP)/SdifTypes.STYP

# recompliation complete necessaire sur modification de cette variable
# de makefile car elle est passee a la complilation
# (D_SDIF_FLAG := -D_SdifTypesFileName='"$(PRE_TYPES_SDIF)"' -D_SDIF_VERS ='"$(VERSION)"' 
#  puis   cc -c D_SDIF_FLAG  .........)




##############################
#	vars
#

DOFLAGS = -O2
TARGET  = -release
LIBNAME = sdif
ifeq ($(DEBUG),1) 
	CAFLAGS =-DDEBUG
	DOFLAGS = -g
	TARGET  = -debug
	LIBNAME = sdif$(TARGET)
endif

LIBS 	  = -l$(LIBNAME)


###########
# vars machine
#
ifeq ($(SYSTEM), IRIX)
	CC	 = cc
	CAFLAGS	+=  -fullwarn
	LFLAGS	 =
	LIBS	+= -lgen
	RANLIB   = echo no ranlib
	INSTALL := /usr/local/bin/install -c 
	INSTALL_H_FILES := $(INSTALL)
endif


ifeq ($(SYSTEM), ULTRIX) 
	CC	 = gcc
	CAFLAGS	+=  -ansi -pedantic
	LIBS	+= -lgen
	RANLIB   = echo no ranlib
	INSTALL :=  /usr/local/bin/install -c 
	INSTALL_H_FILES := $(INSTALL)
endif


ifeq ($(SYSTEM), IRIX64) 
	CC	 = cc
	CAFLAGS	+=  -64 -mips4 -D__mips64 
	LFLAGS	 = -64 -mips4
	LIBS	+= -lgen
	RANLIB   = echo no ranlib
	INSTALL :=  /usr/local/bin/install -c 
	INSTALL_H_FILES := $(INSTALL)
endif


ifeq ($(SYSTEM), OSF1) 
    ifeq ($(DEBUG),1) 
	CC	 = gcc
	CAFLAGS	+= -Wall -ansi
    else
	CC	 = cc
	CAFLAGS	+= -std -Dmips -fullwarn 
    endif	

	LIBS	+= -lm
	LFLAGS	 =

	ifeq ($(DEBUG),1) 
		DOFLAGS = -g3
	endif

	INSTALL := /usr/local/bin/install -c 
	INSTALL_H_FILES := cp -f
	RANLIB = echo no ranlib
endif


ifeq ($(SYSTEM),Linux)
	CC	 =gcc
	CAFLAGS += -Wall #-Wno-multichar	# -ansi inhibits decl of fileno()
	RANLIB   =/usr/bin/ranlib
	INSTALL :=/usr/bin/install -c
	INSTALL_H_FILES:=$(INSTALL)
endif



######
# vars dirs et listes
#

VERSION := $(PROJECT) $(SYS)$(TARGET) $(RELEASE) compiled by $(USER) $(DATE)

INCLUDE_DIR 	= /u/formes/include	# some programs want this
INCLUDE_DIRS 	= $(INCLUDE_DIR) /usr/include
INCLUDE		= $(INCLUDE_DIRS:%=-I%)
D_SDIF_FLAG := -D_SdifTypesFileName='"$(PRE_TYPES_SDIF)"' -D_SDIF_VERSION='"$(VERSION)"'


SDIF_OBJ_DIR 	= $(PRJ_DIR)/obj/$(SYSDIR)
SDIF_LIB_DIR 	= $(PRJ_DIR)/lib$(PROJECT)/$(SYSDIR)
SDIF_LIB	= $(SDIF_LIB_DIR)/lib$(LIBNAME).a

include $(SDIF_SRC_DIR)/Makefile.src

SDIF_OBJS		 = $(SDIF_SRC:%.c=$(SDIF_OBJ_DIR)/%.o)
SDIF_INC		 = $(SDIF_HEADERS:%.h=$(SDIF_SRC_DIR)/%.h)
SDIF_INC_INSTALLED 	 = $(SDIF_HEADERS:%.h=$(INSTALL_INC)/%.h)


###############
# user settings
#

ifeq ($(USER),schwarz)
#	compile in path accessible by other projects in development
	SDIF_LIB_DIR 	= $(HOME)/lib/$(ARCH)/$(SYS)
endif

####################################
INSTALL_DIRS:= $(INSTALL_ROOT) $(INSTALL_LIB) $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_TYP)

