2004-07-13  Axel Roebel  <Axel.Roebel@ircam.fr>
Version 3.8.5

	* Fixed SdiffReadSignature. Number of bytes read need to be added not stored
	in the bytesread container.

	* properly initilize byte counters ind SdifCheck.c

2004-06-17  Axel Roebel  <Axel.Roebel@ircam.fr>
Version 3.8.4

	* tools/sdifextract.c:
	fixed sdifextract padding calculation. As it was it worked for
	many files, but not for all!

2004-06-03  Diemo Schwarz  <schwarz@ligeti.ircam.fr>
Version 3.8.3
	
	* configure.in: Enable profiling compilation with --enable-profile.

	* test/Makefile.am, tools/Makefile.am:
	Complete profiling harness with a list of test cases with variable
	arguments, pre-/postprocessing, logging, etc.
	All output is saved into the prof directory.  The .mon.out files should
	be kept for reference, the .gprof files can be regenerated from that.

	* tools/querysdif.c: 
	Don't read padding when skipping matrices!

	* include/sdif.h:
	added array swapping and binary signature reading functions.

	* sdif/Makefile.am, sdif/SdifFGet.c, sdif/SdifFRead.c, sdif/SdifGlobals.c, sdif/SdifHard_OS.c, sdif/SdifHighLevel.c, sdif/SdifRWLowLevel.c:
	Profiling showed some waste of cycles in byte swapping and signature reading:
	- byte swapping now array-wise, not element-wise in SdifSwap<N>[Copy] routines:   -> from 0.24 s (18.5%) to 0.14s
	- ASCII signature reading function SdiffGetSignature replaced by new binary
	  function SdiffReadSignature (also in SdifFGetSignature, so the change is
	  mostly transparent):
	  -> from 0.11 s (9.6%)  to 0.01 s
	- overall run time improvement with test case sdifextractall_a01:
	  -> from 1.20 s         to 0.86 s (40% faster)

2004-05-27  Nicholas Ellis  <ellis@ligeti.ircam.fr>

	* sdif/SdifFile.c:
	if SdifGenKill called while Sdif not being initialised, directly returning
	(allows to call SdifGenKill more than once)


2004-05-03  Axel Roebel and Diemo Schwarz
Version 3.8.2

	* SdifGlobals.c, SdifFRead.c, SdifFGet.c:
	In order to make reading SDIF files from stdin and pipes possible,
	fixed bugs in padding calculation for ascii chunks:
	1. DON'T PAD FRAMES!
	2. SdifFReadMatrixHeader already accounts for read signature.
	
	Now, calculating padding from ftell is redundant, but we leave it in,
	with a warning, until everyone's code is tested.

2004-02-10  Axel Roebel  <Axel.Roebel@ircam.fr>
Version 3.8.1
	
	* sdif/SdifFile.c
	 Handling of the warning for sdiftypes file changed.
	 Warning will be given only if sdiftypes file has been specified by
	 means of environment variable.
	 A non existing _SdifTypesFileName will no longer be communicated to the user.
	
2004-01-29  Diemo Schwarz  <schwarz@ligeti.ircam.fr>
Version 3.8.0
	
	* macosxbuild/*:
	Add Max OS-X xcode project to dist
	Added Riccardo's xcode project.

2004-01-12  Patrice Tisserand  <tisseran@ligeti.ircam.fr>

	* sdif.spec.in: Fixed list of files to package.

2004-01-09  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* include/sdif.h, sdif/SdifFile.h:
	Removed declaration of SdifFGetFrameType and SdifFGetMatrixType from
	public API because they are misleading.
	Use the correct SdifTestFrameType and SdifTestMatrixType instead.

2003-12-15  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* sdif/SdifList.c:
	SdifKillListCurr for SdifNameValuesLKillCurrNVT, untested

	* sdif/SdifNameValue.c: SdifNameValuesLKillCurrNVT, untested

	* sdif/SdifFile.c, include/sdif.h:
	Added SdifFileT based functions SdifFSetPos, SdifFGetPos around the
	Sdiff* Macros, to be callable from OpenMusic.

2003-11-18  Axel Roebel  <roebel@ligeti.ircam.fr>

	* include/sdif.h: Added alias for typo in SdifErrorTagE.

2003-11-07  Axel Roebel  <roebel@ligeti.ircam.fr>

	* tools/*.c, sdif/*.c:
	Removed last remainings of XpGuiCalls from tools files.
	removed XpGuiCalls.h and replaced preinclude.h  by local files

	* sdif/sdif_portability.h: added preincluded.h replacement to CVS

2003-11-07  Patrice Tisserand  <tisseran@ligeti.ircam.fr>

	* sdif/SdifFile.c: Removed inclusion of SdifFile.h
	Used SDIF_VERSION now.

	* sdif/Makefile.am: Removed CKSUM computing.
	Removed generation of SdifFile.h

2003-11-07  Nicholas Ellis  <ellis@ligeti.ircam.fr>

	* tools/sdiftotext.c, sdif/SdifErrMess.c, sdif/SdifError.c, sdif/SdifFile.c, include/sdif.h:
	Added the declaration of of two functions in the header file
	SdifFAllFrameTypeToSdifString and SdifFAllMatrixTypeToSdifString



2003-11-07  Axel Roebel  <Axel.Roebel@ircam.fr>
3.8.0-beta3

	* reorganized Mac related portability code
	removed all XpGuiCalls, rename preincluded.h to sdif_portability.h

	* include/sdif.h
	added alias for typo in enum eUnknow=eUnknown
	
2003-08-06  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* SdifSelect.c, SdifSelect.h:
	SdifSelectIntMask added for more efficient integer selections.
	New functions:
	- SdifInitIntMask, SdifGetIntMask
	- SdifSelectTestIntMask
	- SdifFNumStreamsSelected, SdifFNumRowsSelected, SdifFNumColumnsSelected
	- SdifFRowIsSelected, SdifFColumnIsSelected
	int value/range had to be changed to SdifUInt4 for this

	* SdifMemory.c, SdifMemory.h: 
	SdifCalloc now does what it appears to do: clear memory
	removed double defs (sdif.h) from SdifMemory.h,	now remove whole file?

	* sdif.h, SdifFRead.c, SdifFRead.h: 
	New functions SdifFSkip, SdifFSkipOneRow.

	* sdif.h, SdifFGet.c, SdifFGet.h, SdifFPrint.c, SdifFPrint.h, SdifFPut.c, SdifFPut.h, SdifFRead.c, SdifFRead.h, SdifFScan.c, SdifFScan.h, SdifFWrite.c, SdifFWrite.h, SdifNameValue.c, SdifFile.c:
	Finally removed obsolete functions (like SdifSkip...).
	

2003-07-21  Axel Roebel  <roebel@ligeti.ircam.fr>

	* SdifFPrint.c: Added support for intreger types to SdifFPrintOneRow

2003-07-21  Patrice Tisserand  <Patrice.Tisserand@ircam.fr>

	* Makefile.am, sdifcpp/Makefile.am: fixed conditionnal compilation/installation of libsdif-cpp.

2003-07-05  Axel Röbel  <roebel@ircam.fr>
3.8.0-beta2
	
	* include/sdif.h, sdif/SdifRWLowLevel.c, sdif/SdifFPrint.c, sdif/SdifGlobals.c
	Added support for types eInt1 and eUInt1.

2003-06-24  Axel Roebel  <Axel.Roebel@ircam.fr>

	* sdif/SdifConvToText.c, sdif/SdifFile.c, sdif/SdifTextConv.c
	removed unnecessary include of UniversalEnvVar.h

2003-06-13  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	Library version is 3.8.0-beta until we decide to announce the
	official release, to avoid confusion.

	* macosxbuild/Makefile.am, macosxbuild/README.MacOSX, macosxbuild/SDIF.pbproj/Makefile.am, Makefile.am, README.MacOSX, configure.in:
	Riccardo updated the MacOsX project to live in macosxbuild.
	Added latest projectbuilder mac os X project to cvs and dist.
	
	* macosxbuild/README.MacOSX.binary-distrib:
	assembled from general readme and LGPL in COPYING

2003-06-06  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* sdif/SdifFile.c, sdif/SdifHard_OS.c, include/sdif.h:
	Added eReadWriteFile that eventually opens a file in read-write mode.

2003-06-04  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* tools/querysdif.c: Finally: do statistics about matrix sizes.

2003-05-30  Diemo Schwarz  <schwarz@ligeti.ircam.fr>

	* configure.in:
	Bumped up version to 3.8.0 because of added API functions for
	type definition access.

	* include/sdif.h, sdif/SdifFile.c:
	Added SdifFGetMatrixType and SdifFGetFrameType.
	Added SdifFGetMatrixTypesTable and SdifFGetFrameTypesTable.
	Documented other type access functions.

	* sdif/SdifFPrint.c:
	Added text matrix case to SdifFPrintOneRow for sdiftotext conversion
	(called from SdifConvToText.c)


Version 3.7.5	2003-05-24  Axel Röbel  <roebel@ircam.fr>

	* include/sdif_version.h.in: 
	Renamed  VERSION string to SDIF_VERSION_STRING
	A VERSION Macro in user include files breaks
	include files in dependend libraries that itself 
	define a VERSION macro.

	The version macro used for SdifPrintVersion is now 
	SDIF_VERSION_STRING whic will work for all platforms.	

Version 3.7.4	2003-05-23  Diemo Schwarz  <schwarz@ircam.fr>

	* sdif.pbxproj, macosxbuild, winbuild:
	Added Mac OS-X Project Builder project.
	Added win and mac build directories winbuild and maxosxbuild,
	not yet used since you have to change the projects first.

	* include/sdif_version.h.in: 
	Added definition of total VERSION string.
	This is necessary for non-configured builds like on Mac.

	
2003-05-01  Axel Roebel  <roebel@ligeti.ircam.fr>

	* ChangeLog: Added last changes.

	* Makefile.am: Fixed double declaration of EXTRA_DIST variable.

	* sdif/SdifRWLowLevel.h: Removed declarations that are now in sdif.h

	* sdif/SdifRWLowLevel.c:
	SdifStringToSignature takes now const char * as argument.

	* include/sdif.h:
	SdifStringToSignature takes now const char * as argument.
	Added missing declaration for SdifSkipASCIIUntilfromSdifString.

	
2003-05-01  Axel Röbel  <roebel@ircam.fr>

	* Removed the declarations from SdifRWLowLevel.h that are in
	sdif.h

	* For improved integration into Easdif SdifStringToSignature 
	takes now "const char *" as argument

	
Version 3.7.3	2003-03-07  Axel Roebel  <roebel@kempyang.ircam.fr>

        * maintenance release for Easdif integration
	
	* Improved handling of ircam include files.

        * cplusplus compilation takes place in separate directory and
        is not used for instalation.

	
Version 3.7.2	2002-12-17  Axel Roebel, Patrice Tisserand

	* Bug fix and increased efficency in SdifNameValuesLSetCurrNVT.
	For certain cases setting the current NVT has messed up 
	the NVT indices.

	* Fixed .exe extensions for building with cygwin.

	* Fixed debug library names.
	
	* Conditional SdifFTruncate body, because not Posix.
	
	
Version 3.7.1	2002-10-30  Diemo Schwarz, Patrice Tisserand

	Maintenance release, no changes to sources.
	
	* Added dynamic shared library building by default (libsdif-3.7.1.so).

	* Added build targets and sdif.spec.in file for source
	  distribution and binary rpm.
		
	* Added support of pkg-config for SDIF library.

	* Added project file for MS Visual C++ 7.0 (.net),
	  thanks to Michael Gogins (gogins@pipeline.com)
	
	
Version 3.7.0	2002-09-20  Diemo Schwarz  <schwarz@lithium.ircam.fr>

	* Reintroduced 3-field version numbering scheme:
	  - first number:  major version, only gigantic changes
	  - second number: minor version, records changes in API 
			   (added/removed functions, changed prototypes)
	  - third number:  release number, for intermediate releases, 
			   bug fixes, etc. that don't change the API
	
	* Functions added:
	  - SdifFRewind		   rewind file to beginning
	  - SdifFTruncate	   file truncate function
	  - SdifParseSignatureList Parse comma-separated list of signatures
	  - SdifKillSelectElement  now public
	
	* Compilation with g++ configurable with --enable-cpp

	* Changed description types (types/sdiftypes.xml)
	  - added segmentation and midi frame and matrix types
	  - changed definition of matrix data type: 
	    use <datatype>...</datatype> tag around!	
	  -> tdl-version 0.4beta
	
	
Version 3.6	2002-08-05  Axel Roebel  <roebel@kempyang.ircam.fr>

	* Fixed some unwanted redeclarations.

	* SDIF now compiles with g++.

	* Support for replacing a selection.

	* Support for error and warning callbacks.

	
Version 3.5:
	
	* Fixed bugs in preincluded.h and UniversalEnvVar.h (thanks to
	  Kelly Fitz for pointing out the problem).

	* Fixed sdif output bug in sdifextract.

	
Version 3.4:
	
	* Added defines SDIF_VERSION_MAJOR/SDIF_VERSION_MINOR
	  for version indication.
	
	* No more warnings if the number of columns exceeds the number defined 
	  in the types file.
	
	* Minor changes in the default sdiftypes file.

	
Version 3.3:
	
	* Modification of standard SDIF description types initialisation:
	  The types can now be defined in the file SdifTypes.STYP OR a
	  built-in definition can be used. This allows effectively to drop
	  the SdifTypes.STYP file altogether and avoid frequent
	  installation problems.  The name of the built-in definition
	  string is SDIFTYPES_STRING (in file sdiftypes.h). This string is
	  used by SDIF library when the file SdifTypes.STYP define at
	  compilation (in directory datadir, by default /usr/local/share
	  or $PREFIX/share) or file specified in environnement variable
	  SDIFTYPES is not found.  TODO: This string is generated at
	  IRCAM, by a perl script which should be included in future
	  version of library.
	
	* Fix for autoconfiguration tools.  autoconf will now work on all
	  UNIX-like operating systems (OSF1, IRIX, Linux and Mac OS X).
	  Beware, we have suppose than in each platform will use configure
	  mechanism, the directory divider is "/".  TODO: We will include
	  a test at configuration to know the directory divider use on
	  Operating System.

	
$Id: ChangeLog,v 1.37 2004-07-13 18:02:36 roebel Exp $
