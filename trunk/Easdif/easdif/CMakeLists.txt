
# easdif_version.hpp is installed as well but in ../CMakeLists.txt
SET(noinst_HEADERS easdif_version.hpp easdifintro.hpp easdif_config.hpp)
SET(HEADERS  easdif.h  sdifentity.hpp sdifexception.hpp sdif_frame.hpp sdifinit.hpp sdifmatrixdata.hpp sdifmatrixdatainterface.hpp sdif_matrix.hpp sdifnamevaluetable.hpp)

GET_FILENAME_COMPONENT(normalize_path ${CMAKE_CURRENT_SOURCE_DIR}/../SDIF/sdif ABSOLUTE)
GET_DIRECTORY_PROPERTY(sdif_C_SOURCES DIRECTORY ${normalize_path} DEFINITION sdif_SOURCES)
SET(easdif_SOURCES sdifentity.cpp  sdifexception.cpp sdif_matrix.cpp sdif_frame.cpp sdifnamevaluetable.cpp sdifinit.cpp)

SET(sdif_CXX_SOURCES)
FOREACH( file ${sdif_C_SOURCES})
  GET_FILENAME_COMPONENT(filetmp ${file} NAME_WE)
  SET(filecxx ${CMAKE_CURRENT_BINARY_DIR}/${filetmp}.cxx)
  CONFIGURE_FILE(${file} ${filecxx} COPYONLY)
  LIST(APPEND sdif_CXX_SOURCES ${filecxx})
ENDFOREACH( file ${sdif_C_SOURCES})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../SDIF/sdif)
OPTION(EASDIF_BUILD_STATIC "build static versions of the library" off)
IF(EASDIF_BUILD_STATIC)
  ADD_LIBRARY(Easdif${DEBUGEXT} STATIC  ${easdif_SOURCES} ${sdif_CXX_SOURCES}  )
ELSE(EASDIF_BUILD_STATIC)
  ADD_LIBRARY(Easdif${DEBUGEXT} SHARED ${easdif_SOURCES} ${sdif_CXX_SOURCES} )
ENDIF(EASDIF_BUILD_STATIC)


SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} LINKER_LANGUAGE CXX)

IF(APPLE AND NOT EASDIF_BUILD_STATIC)
IF(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
 SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES INSTALL_NAME_DIR  ${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR} )
ELSE(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
SET(INSTALLED_TARGET_NAME ${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}Easdif${DEBUGEXT}${CMAKE_SHARED_LIBRARY_SUFFIX}.${EASDIF_VERSION})
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmModules/SET_INSTALL_NAME.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/SET_INSTALL_NAME.cmake)
 SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES POST_INSTALL_SCRIPT  ${CMAKE_CURRENT_BINARY_DIR}/SET_INSTALL_NAME.cmake )

ENDIF(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
ENDIF(APPLE AND NOT EASDIF_BUILD_STATIC)


#SET_TARGET_PROPERTIES(Easdif_static${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} POST_INSTALL_SCRIPT ${CMAKE_BINARY_DIR}/easdif/RenameInstalledStaticLib.cmake )
#SET_TARGET_PROPERTIES(Easdif_static${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} OUTPUT_NAME Easdif${DEBUGEXT})
INSTALL(TARGETS  Easdif${DEBUGEXT} DESTINATION ${INSTALL_LIB_DIR})
INSTALL(FILES  ${HEADERS} DESTINATION ${INSTALL_INC_DIR}/easdif )

#prevent name clash between import library
#IF(NOT WIN32)
#  SET(BEFORE_RENAME "Easdif_static${DEBUGEXT}")
#  SET(AFTER_RENAME "Easdif${DEBUGEXT}")
#  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/../cmModules/RenameInstalledStaticLib.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/RenameInstalledStaticLib.cmake @ONLY)
#ENDIF(NOT WIN32)

INCLUDE(STORE_FILES_LIST)
STORE_FILES_LIST(srcDOCFILES ${SOURCES} ${HEADERS}  ${noinst_HEADERS})
